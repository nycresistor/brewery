#!/usr/bin/env python
# matt@nycresistor.com

import getopt
import fcntl
import mraa
import random
import serial
import socket
import string
import struct
import sys
import time
import zmq

import pyupm_i2clcd as lcd


__version__ = "0.1"
app_name = "mechanical relay switch daemon"

# Initialize Jhd1313m1 at 0x3E (LCD_ADDRESS) and 0x62 (RGB_ADDRESS)
myLcd = lcd.Jhd1313m1(0, 0x3E, 0x62)
myLcd.clear()
myLcd.setColor(255, 255, 0)
myLcd.setCursor(0,0)

def get_temp():
    port = "5559"
    context = zmq.Context()
    socket = context.socket(zmq.REQ)
    socket.connect ("tcp://localhost:%s" % port)
    client_id = random.randrange(1,10005)
    socket.send ("templs %s" % client_id)
    #  Get the reply.
    celsius = socket.recv()
    # celsius = float(celsius)
    # fahrenheit = 9.0/5.0 * celsius + 32
    return celsius

def get_ip_address(ifname):

    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    return socket.inet_ntoa(fcntl.ioctl(
        s.fileno(),
        0x8915,  # SIOCGIFADDR
        struct.pack('256s', ifname[:15])
    )[20:24])

def read_gpio(rid):
    x = mraa.Gpio(rid)
    value = x.read()
    return value

def lcdloop():
    try:
        # collect temp stats
        celsius = get_temp()
        celsius = float(celsius)
        fahrenheit = 9.0/5.0 * celsius + 32

        # collect condensor relay stats
        relay_state = read_gpio(2)
        relay_state = int(relay_state)

        myLcd.clear()
        myLcd.setColor(255, 255, 0)
        myLcd.setCursor(0,0)
        temp_line = "%d C / %d F - %s" % (celsius, fahrenheit, relay_state)
        myLcd.write(temp_line)
        myLcd.setCursor(1, 0)
        ip_address = get_ip_address('wlan0')
        myLcd.write(ip_address)
    except:
        print "oof : %s" % celsius

while True:
    lcdloop()
